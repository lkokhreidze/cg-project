/**
 * Converts csv file to json representation
 * Takes first line as keys
 * @author Levani Kokhreidze
 * @since 1.0
 */

import groovy.json.JsonBuilder
import groovy.json.JsonOutput

group 'csv-to-json'
version '1.0'

apply plugin: 'groovy'
apply plugin: 'java'

repositories {
    mavenCentral()
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.3.11'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task toJson << {
    def csvFile = readCsvFile()
    if(!csvFile) {
        return
    }
    parse(csvFile)
}

def parse(File csvFile) {
    def lines = csvFile.readLines()
    def keys = lines[0].split(',')
    def content = ''
    lines[1..-1].collect { line ->
        def i = 0, values = line.split(',', -1)
        content += JsonOutput.toJson(keys.inject([:]) { map, key -> map << ["$key": values[i++]] })
    }
    new File('../../datasource/data.json').write(new JsonBuilder(content).toPrettyString())
}

def readCsvFile() {
    def console = System.console()
    def csvPath = ''
    if (console) {
        csvPath = console.readLine("> write csv file path: ")
    }
    def csvFile = new File('../../', csvPath)
    if(!csvFile.exists()) {
        println "Csv file doesn't exist"
        return null
    }
    csvFile
}